##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Implementing our load balancer
upstream team.angelbrv.com{
	server 172.50.0.12:443; # apache02
	server 172.50.0.11:443; # apache01
	server 172.50.0.13:443; # apache03
}

# Default server configuration
#
server {	
	# SSL configuration
	#
	listen 443 ssl default_server;
	listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;
	ssl_certificate         /etc/nginx/fullchain.cer;
	ssl_certificate_key     /etc/nginx/client.key;
	ssl_trusted_certificate /etc/nginx/ca.cer;


	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name team.angelbrv.com;

	location /.well-known {
		alias /var/www/html/.well-known;
    }

	location / {
		# Proxy the load balancer
		proxy_set_header Host $host;
    	proxy_set_header X-Real-IP $remote_addr;
		proxy_pass https://team.angelbrv.com;

		# Enable SSL
		proxy_ssl_certificate         /etc/nginx/fullchain.cer;
		proxy_ssl_certificate_key     /etc/nginx/client.key;
		proxy_ssl_protocols           TLSv1 TLSv1.1 TLSv1.2;
		proxy_ssl_ciphers             HIGH:!aNULL:!MD5;
		proxy_ssl_trusted_certificate /etc/nginx/ca.cer;

		proxy_ssl_verify        off;
		proxy_ssl_verify_depth  2;
		proxy_ssl_session_reuse on;
		proxy_ssl_server_name 	on;

		# https://community.letsencrypt.org/t/load-balancing-with-nginx/33111/6
		# https://docs.nginx.com/nginx/admin-guide/security-controls/securing-http-traffic-upstream/
		# https://serverfault.com/questions/768509/lets-encrypt-with-an-nginx-reverse-proxy
	}

	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/run/php/php7.3-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
server {
	listen 80 default_server;
	listen [::]:80 default_server;

	server_name team.angelbrv.com;

	return 301 https://$host$request_uri;
}
